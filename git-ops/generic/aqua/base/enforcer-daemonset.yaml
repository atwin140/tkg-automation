---
# Source: enforcer/templates/enforcer-daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: mc-aqua-enforcer-ds

  namespace: aqua
  labels:
    app: aqua-ds
    aqua.component: enforcer

    helm.sh/chart: 'enforcer-2022.4.28'
    app.kubernetes.io/name: "enforcer"
    app.kubernetes.io/instance: mc
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/version: "2022.4"
spec:
  selector:
    matchLabels:
      app: aqua-ds
  template:
    metadata:
      labels:
        app: aqua-ds
        aqua.component: enforcer
        helm.sh/chart: 'enforcer-2022.4.28'
        app.kubernetes.io/name: "enforcer"
        app.kubernetes.io/instance: "aqua"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/version: "2022.4"
      name: aqua-ds
    spec:
      serviceAccount: aquasvc
      containers:
      - name: enforcer
        image: "enforcer:2022.4"
        imagePullPolicy: "Always"
        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - NET_ADMIN
            - NET_RAW
            - SYS_PTRACE
            - KILL
            - MKNOD
            - SETGID
            - SETUID
            - SYS_MODULE
            - AUDIT_CONTROL
            - SYSLOG
            - SYS_CHROOT
            - SYS_RESOURCE
            - IPC_LOCK
          privileged: true
        envFrom:
        - configMapRef:
            name: mc-aqua-enforcer-config
        env:
        - name: AQUA_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: AQUA_LOGICAL_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: AQUA_TOKEN
          valueFrom:
            secretKeyRef:
              name: aqua-agent-token
              key: token


        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/run
          name: var-run
        - mountPath: /dev
          name: dev
        - mountPath: /host/sys
          name: sys
          readOnly: true
        - mountPath: /host/proc
          name: proc
          readOnly: true
        - mountPath: /host/etc
          name: etc
          readOnly: true
        - mountPath: /host/opt/aquasec
          name: aquasec
          readOnly: true
        - mountPath: /opt/aquasec/tmp
          name: aquasec-tmp
        - mountPath: /opt/aquasec/audit
          name: aquasec-audit
        - mountPath: /data
          name: aquasec-data
        - mountPath: /var/lib/containers
          name: containers
        livenessProbe:

          httpGet:
            path: /healthz
            port: 8096
          initialDelaySeconds: 60
          periodSeconds: 30
        readinessProbe:

          httpGet:
            path: /readinessz
            port: 8096
          initialDelaySeconds: 60
          periodSeconds: 30
        resources:
            {}
      dnsPolicy: ClusterFirst
      hostPID: true
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
      - name: var-run
        hostPath:
          path: /var/run
          type: ""
      - name: dev
        hostPath:
          path: /dev
          type: ""
      - name: sys
        hostPath:
          path: /sys
          type: ""
      - name: proc
        hostPath:
          path: /proc
          type: ""
      - name: etc
        hostPath:
          path: /etc
          type: ""
      - name: aquasec
        hostPath:
          path: /var/lib/aquasec
          type: ""
      - name: aquasec-tmp
        hostPath:
          path: /var/lib/aquasec/tmp
          type: ""
      - name: aquasec-audit
        hostPath:
          path: /var/lib/aquasec/audit
      - name: aquasec-data
        hostPath:
          path: /var/lib/aquasec/data
          type: ""
      - name: containers
        hostPath:
          path: /var/lib/containers
          type: ""
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
